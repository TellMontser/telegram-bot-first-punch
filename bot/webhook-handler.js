import { 
  updatePaymentStatus, 
  getPaymentByPaymentId, 
  addSubscription,
  addPaymentMethod,
  enableAutoPayments
} from './lib/supabase.js';
import { startAutoPayments } from './lib/auto-payments.js';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç –ÆKassa
export async function handleYukassaWebhook(bot, webhookData) {
  try {
    console.log('üì° –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç –ÆKassa:', JSON.stringify(webhookData, null, 2));
    
    const { type, object: payment } = webhookData;
    
    if (type === 'payment.succeeded') {
      console.log(`‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω: ${payment.id}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const updatedPayment = await updatePaymentStatus(payment.id, 'succeeded');
      
      if (updatedPayment) {
        const userId = updatedPayment.user_id;
        const amount = updatedPayment.amount;
        
        console.log(`üí≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
        
        // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π
        await addSubscription(userId, payment.id, amount, 30, 'yukassa');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã (–¥–ª—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π)
        if (payment.payment_method && payment.payment_method.saved) {
          console.log(`üíæ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${payment.payment_method.id}`);
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
          const cardMask = payment.payment_method.card ? 
            `**** **** **** ${payment.payment_method.card.last4}` : null;
          
          await addPaymentMethod(
            userId, 
            payment.payment_method.id, 
            payment.payment_method.type || 'card',
            cardMask
          );
          
          // –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
          await enableAutoPayments(userId, payment.payment_method.id);
          
          // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏
          await startAutoPayments(userId, payment.payment_method.id, 10);
          
          console.log(`üîÑ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
          
          // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏
          try {
            await bot.sendMessage(userId, `üéâ *–ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!*

‚úÖ –í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ ${amount}‚ÇΩ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
üîÑ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã
üí≥ –ö–∞—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${cardMask || '–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω'}

‚è∞ –°–ª–µ–¥—É—é—â–µ–µ —Å–ø–∏—Å–∞–Ω–∏–µ: —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç (—Ç–µ—Å—Ç)
üí∞ –°—É–º–º–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞: 10‚ÇΩ

üõë –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –º–µ–Ω—é –±–æ—Ç–∞.

üé≠ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á"!`, {
              parse_mode: 'Markdown'
            });
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–µ:', error);
          }
        } else {
          // –û–±—ã—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –±–µ–∑ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
          console.log(`üí≥ –û–±—ã—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
          
          // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
          try {
            await bot.sendMessage(userId, `üéâ *–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!*

‚úÖ –í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ ${amount}‚ÇΩ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π
üé≠ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á"!

üí° –•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫—É? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "–ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞".`, {
              parse_mode: 'Markdown'
            });
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ:', error);
          }
        }
        
        console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–∞ 30 –¥–Ω–µ–π`);
      } else {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–ª–∞—Ç–µ–∂ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', payment.id);
      }
    } else if (type === 'payment.canceled') {
      console.log(`‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω: ${payment.id}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await updatePaymentStatus(payment.id, 'cancelled');
      
      // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—Ç–º–µ–Ω–µ
      const paymentRecord = await getPaymentByPaymentId(payment.id);
      if (paymentRecord) {
        try {
          await bot.sendMessage(paymentRecord.user_id, `‚ùå *–ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω*

–í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ ${paymentRecord.amount}‚ÇΩ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.

üí° –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–ø–ª–∞—Ç–∏—Ç—å —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start.`, {
            parse_mode: 'Markdown'
          });
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ:', error);
        }
      }
    } else if (type === 'payment.waiting_for_capture') {
      console.log(`‚è≥ –ü–ª–∞—Ç–µ–∂ –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${payment.id}`);
      // –û–±—ã—á–Ω–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (capture: true) —ç—Ç–æ—Ç —Å—Ç–∞—Ç—É—Å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    } else {
      console.log(`‚ÑπÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø webhook –æ—Ç –ÆKassa: ${type}`);
    }
    
    return { success: true };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook –æ—Ç –ÆKassa:', error);
    return { success: false, error: error.message };
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç CryptoCloud
export async function handleCryptoCloudWebhook(bot, webhookData) {
  try {
    console.log('üì° –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç CryptoCloud:', JSON.stringify(webhookData, null, 2));
    
    const { status, uuid: paymentId, amount_crypto, amount_rub } = webhookData;
    
    if (status === 'paid' || status === 'confirmed') {
      console.log(`‚úÖ –ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω: ${paymentId}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const updatedPayment = await updatePaymentStatus(paymentId, 'succeeded');
      
      if (updatedPayment) {
        const userId = updatedPayment.user_id;
        const amount = updatedPayment.amount;
        
        console.log(`‚Çø –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
        
        // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π
        await addSubscription(userId, paymentId, amount, 30, 'cryptocloud');
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
        try {
          await bot.sendMessage(userId, `üéâ *–ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!*

‚úÖ –í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ ${amount}‚ÇΩ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
‚Çø –ü–æ–ª—É—á–µ–Ω–æ: ${amount_crypto || 'N/A'} –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π
üé≠ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á"!

üí° CryptoCloud –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏. –î–ª—è –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ÆKassa.`, {
            parse_mode: 'Markdown'
          });
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ:', error);
        }
        
        console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–∞ 30 –¥–Ω–µ–π (CryptoCloud)`);
      } else {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', paymentId);
      }
    } else if (status === 'canceled' || status === 'failed') {
      console.log(`‚ùå –ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω/–Ω–µ—É–¥–∞—á–µ–Ω: ${paymentId}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await updatePaymentStatus(paymentId, 'cancelled');
      
      // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—Ç–º–µ–Ω–µ
      const paymentRecord = await getPaymentByPaymentId(paymentId);
      if (paymentRecord) {
        try {
          await bot.sendMessage(paymentRecord.user_id, `‚ùå *–ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ –Ω–µ —É–¥–∞–ª—Å—è*

–í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ ${paymentRecord.amount}‚ÇΩ –Ω–µ –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω.

üí° –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–ø–ª–∞—Ç–∏—Ç—å —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start.`, {
            parse_mode: 'Markdown'
          });
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–∞:', error);
        }
      }
    } else {
      console.log(`‚ÑπÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å webhook –æ—Ç CryptoCloud: ${status}`);
    }
    
    return { success: true };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook –æ—Ç CryptoCloud:', error);
    return { success: false, error: error.message };
  }
}