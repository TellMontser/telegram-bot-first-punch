import cron from 'node-cron';

export class PaymentScheduler {
  constructor(database, yookassaService, telegramBot = null) {
    this.database = database;
    this.yookassaService = yookassaService;
    this.telegramBot = telegramBot;
    this.task = null;
    this.auditTask = null;
  }

  start() {
    // –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã –¥–ª—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
    this.task = cron.schedule('*/2 * * * *', async () => {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã...');
      await this.processAutoPayments();
    });

    // –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç –¥–ª—è –∞—É–¥–∏—Ç–∞ –∫–∞–Ω–∞–ª–∞
    if (this.telegramBot && this.telegramBot.PRIVATE_CHANNEL_ID) {
      this.auditTask = cron.schedule('*/10 * * * *', async () => {
        console.log('üîç –ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞...');
        await this.telegramBot.performChannelAudit();
      });
    }

    console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π –∏ –∞—É–¥–∏—Ç–∞ –∑–∞–ø—É—â–µ–Ω');
  }

  stop() {
    if (this.task) {
      this.task.stop();
      console.log('‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    
    if (this.auditTask) {
      this.auditTask.stop();
      console.log('‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞—É–¥–∏—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  }

  async processAutoPayments() {
    try {
      console.log('üîç –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–æ—Ç–æ–≤—ã—Ö –∫ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂—É (–∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã)...');
      const users = await this.database.getUsersReadyForAutoPayment();
      
      console.log(`üí≥ –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–æ—Ç–æ–≤—ã—Ö –∫ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂—É`);
      
      for (const user of users) {
        await this.processUserAutoPayment(user);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π:', error);
    }
  }

  async processUserAutoPayment(user) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—É–º–º—É –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const paymentAmount = 10; // –í—Å–µ–≥–¥–∞ 10 —Ä—É–±–ª–µ–π
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
      const allowedIntervals = ['2_minutes', '3_minutes', 'hourly', 'daily', 'weekly', 'monthly', 'custom'];
      if (!user.auto_payment_interval || !allowedIntervals.includes(user.auto_payment_interval)) {
        console.warn(`‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${user.auto_payment_interval}, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'monthly'`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        await this.database.supabase
          .from('users')
          .update({ auto_payment_interval: 'monthly' })
          .eq('telegram_id', user.telegram_id);
        
        user.auto_payment_interval = 'monthly'; // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
      }
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      const now = this.getMoscowTime();
      const shouldProcess = this.shouldProcessAutoPayment(user, now);
      
      if (!shouldProcess.ready) {
        console.log(`‚è∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.telegram_id} –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤ –∫ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂—É: ${shouldProcess.reason}`);
        return;
      }
      
      console.log(`üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id}, —Å—É–º–º–∞: ${paymentAmount} —Ä—É–±, —Å–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂: ${shouldProcess.nextPaymentTime}`);
      
      if (!user.payment_method_id) {
        console.log(`‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –Ω–µ—Ç payment_method_id, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂`);
        
        await this.database.setAutoPayment(user.telegram_id, false);
        await this.database.logSubscriptionAction(
          user.id,
          'auto_payment_disabled',
          '–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª—é—á–µ–Ω: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç payment_method_id'
        );
        
        if (this.telegramBot && this.telegramBot.bot) {
          try {
            await this.telegramBot.bot.sendMessage(user.telegram_id, `
‚ö†Ô∏è –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª—é—á–µ–Ω

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.

–î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:
üí≥ –û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É: /start
üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: /profile

‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –±—É–¥–µ—Ç –æ—Ç–æ–∑–≤–∞–Ω –ø—Ä–∏ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.
            `);
          } catch (notifyError) {
            console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞:`, notifyError);
          }
        }
        
        return;
      }

      // –†–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã–π –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å—É —Å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const payment = await this.yookassaService.createRecurringPayment(
        10, // –í—Å–µ–≥–¥–∞ 10 —Ä—É–±–ª–µ–π
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ü–µ—Ä–≤—ã–π –ü–∞–Ω—á',
        user.payment_method_id,
        user.email || 'noreply@firstpunch.ru' // –ü–µ—Ä–µ–¥–∞–µ–º email –¥–ª—è —á–µ–∫–∞ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
      );

      await this.database.createPayment(
        user.id,
        payment.id,
        10, // –í—Å–µ–≥–¥–∞ 10 —Ä—É–±–ª–µ–π
        payment.status,
        user.payment_method_id
      );

      await this.database.updateLastPaymentDate(user.telegram_id);

      // –û—á–∏—â–∞–µ–º next_payment_date –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞, —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è —Ä–∞—Å—á–µ—Ç –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É
      if (user.next_payment_date) {
        await this.database.supabase
          .from('users')
          .update({ next_payment_date: null })
          .eq('telegram_id', user.telegram_id);
      }

      await this.database.logSubscriptionAction(
        user.id,
        'auto_payment_created',
        `–°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –Ω–∞ 10 —Ä—É–±. Payment ID: ${payment.id}`
      );

      // –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω, –ø—Ä–æ–¥–ª–µ–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –º–µ—Å—è—Ü
      if (payment.status === 'succeeded') {
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const subscriptionEnd = this.calculateSubscriptionEndMoscow(user.auto_payment_interval, user.custom_interval_minutes);
        
        await this.database.updateUserStatus(user.telegram_id, 'active', subscriptionEnd);
        
        await this.database.logSubscriptionAction(
          user.id,
          'subscription_renewed',
          `–ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –¥–æ ${subscriptionEnd}`
        );

        console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –¥–æ ${subscriptionEnd}`);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ
        if (this.telegramBot && this.telegramBot.bot) {
          try {
            const endDate = new Date(subscriptionEnd);
            const moscowEndDate = new Date(endDate.getTime() + (3 * 60 * 60 * 1000));
            
            await this.telegramBot.bot.sendMessage(user.telegram_id, `
‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!

üí∞ –°–ø–∏—Å–∞–Ω–æ: 10 —Ä—É–±–ª–µ–π
üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –¥–æ: ${moscowEndDate.toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
üîÑ –°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂: —á–µ—Ä–µ–∑ ${this.getIntervalDescription(user.auto_payment_interval)}

üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: /profile
            `);
          } catch (notifyError) {
            console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –æ–± —É—Å–ø–µ—à–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ:`, notifyError);
          }
        }
      } else {
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–µ—É—Å–ø–µ—à–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ
        if (this.telegramBot && this.telegramBot.bot) {
          try {
            await this.telegramBot.bot.sendMessage(user.telegram_id, `
‚ùå –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω

üí∞ –°—É–º–º–∞: 10 —Ä—É–±–ª–µ–π
üìã –°—Ç–∞—Ç—É—Å: ${payment.status}

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ
‚Ä¢ –ö–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –±–∞–Ω–∫–∞

üîÑ –ü–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ
üí≥ –ò–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É: /start
            `);
          } catch (notifyError) {
            console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –æ –Ω–µ—É—Å–ø–µ—à–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ:`, notifyError);
          }
        }
      }

      console.log(`‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ 10 —Ä—É–± —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id}: ${payment.id}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id}:`, error);
      
      await this.database.setAutoPayment(user.telegram_id, false);
      await this.database.logSubscriptionAction(
        user.id,
        'auto_payment_disabled',
        `–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª—é—á–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${error.message}`
      );

      if (this.telegramBot && this.telegramBot.bot) {
        try {
          await this.telegramBot.bot.sendMessage(user.telegram_id, `
‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞

–ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ
‚Ä¢ –ö–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –±–∞–Ω–∫–∞

‚ö†Ô∏è –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω
üí≥ –î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: /start

üîí –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –±—É–¥–µ—Ç –æ—Ç–æ–∑–≤–∞–Ω –ø—Ä–∏ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.
          `);
        } catch (notifyError) {
          console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –æ–± –æ—à–∏–±–∫–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞:`, notifyError);
        }
      }
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
  getMoscowTime() {
    const now = new Date();
    // –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è UTC+3
    const moscowTime = new Date(now.getTime() + (3 * 60 * 60 * 1000));
    return moscowTime;
  }

  // –û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  getIntervalDescription(interval) {
    const descriptions = {
      '2_minutes': '2 –º–∏–Ω—É—Ç—ã',
      '3_minutes': '3 –º–∏–Ω—É—Ç—ã', 
      'hourly': '1 —á–∞—Å',
      'daily': '1 –¥–µ–Ω—å',
      'weekly': '1 –Ω–µ–¥–µ–ª—é',
      'monthly': '1 –º–µ—Å—è—Ü'
    };
    return descriptions[interval] || '1 –º–µ—Å—è—Ü';
  }

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂—É
  shouldProcessAutoPayment(user, currentTime) {
    // –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–æ—á–Ω–∞—è –¥–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    if (user.next_payment_date) {
      const nextPaymentDate = new Date(user.next_payment_date);
      if (currentTime >= nextPaymentDate) {
        return {
          ready: true,
          reason: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞',
          nextPaymentTime: nextPaymentDate.toISOString()
        };
      } else {
        return {
          ready: false,
          reason: `–ñ–¥–µ–º –¥–æ ${nextPaymentDate.toLocaleString('ru-RU')}`,
          nextPaymentTime: nextPaymentDate.toISOString()
        };
      }
    }

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    const baseTime = user.last_payment_date ? new Date(user.last_payment_date) : new Date(user.created_at);
    const nextPaymentTime = this.calculateNextPaymentTime(baseTime, user.auto_payment_interval, user.custom_interval_minutes);
    
    if (currentTime >= nextPaymentTime) {
      return {
        ready: true,
        reason: '–ü—Ä–æ—à–µ–ª –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞',
        nextPaymentTime: nextPaymentTime.toISOString()
      };
    } else {
      return {
        ready: false,
        reason: `–ñ–¥–µ–º –¥–æ ${nextPaymentTime.toLocaleString('ru-RU')}`,
        nextPaymentTime: nextPaymentTime.toISOString()
      };
    }
  }

  // –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
  calculateNextPaymentTime(baseTime, interval, customMinutes = null) {
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const base = new Date(baseTime);
    const moscowBase = new Date(base.getTime() + (3 * 60 * 60 * 1000));
    
    switch (interval) {
      case '2_minutes':
        return new Date(moscowBase.getTime() + 2 * 60 * 1000);
      case '3_minutes':
        return new Date(moscowBase.getTime() + 3 * 60 * 1000);
      case 'hourly':
        return new Date(moscowBase.getTime() + 60 * 60 * 1000);
      case 'daily':
        return new Date(moscowBase.getTime() + 24 * 60 * 60 * 1000);
      case 'weekly':
        return new Date(moscowBase.getTime() + 7 * 24 * 60 * 60 * 1000);
      case 'monthly':
        const monthNext = new Date(moscowBase);
        monthNext.setMonth(monthNext.getMonth() + 1);
        return monthNext;
      case 'custom':
        if (customMinutes) {
          return new Date(moscowBase.getTime() + customMinutes * 60 * 1000);
        }
        // –ï—Å–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Å—è—Ü –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const defaultNext = new Date(moscowBase);
        defaultNext.setMonth(defaultNext.getMonth() + 1);
        return defaultNext;
      default:
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - 2 –º–∏–Ω—É—Ç—ã
        return new Date(moscowBase.getTime() + 2 * 60 * 1000);
    }
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏
  calculateSubscriptionEndMoscow(interval, customMinutes = null) {
    const now = this.getMoscowTime();
    
    switch (interval) {
      case '2_minutes':
        return new Date(now.getTime() + 2 * 60 * 1000).toISOString();
      case '3_minutes':
        return new Date(now.getTime() + 3 * 60 * 1000).toISOString();
      case 'hourly':
        return new Date(now.getTime() + 60 * 60 * 1000).toISOString();
      case 'daily':
        return new Date(now.getTime() + 24 * 60 * 60 * 1000).toISOString();
      case 'weekly':
        return new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString();
      case 'monthly':
        const monthEnd = new Date(now);
        monthEnd.setMonth(monthEnd.getMonth() + 1);
        return monthEnd.toISOString();
      case 'custom':
        if (customMinutes) {
          return new Date(now.getTime() + customMinutes * 60 * 1000).toISOString();
        }
        // –ï—Å–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Å—è—Ü –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const defaultEnd = new Date(now);
        defaultEnd.setMonth(defaultEnd.getMonth() + 1);
        return defaultEnd.toISOString();
      default:
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - 2 –º–∏–Ω—É—Ç—ã
        return new Date(now.getTime() + 2 * 60 * 1000).toISOString();
    }
  }
  
  // –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏
  calculateSubscriptionEnd(interval = '2_minutes', customMinutes = null) {
    const now = this.getMoscowTime();
    
    switch (interval) {
      case '2_minutes':
        return new Date(now.getTime() + 2 * 60 * 1000);
      case '3_minutes':
        return new Date(now.getTime() + 3 * 60 * 1000);
      case 'hourly':
        return new Date(now.getTime() + 60 * 60 * 1000);
      case 'daily':
        return new Date(now.getTime() + 24 * 60 * 60 * 1000);
      case 'weekly':
        return new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);
      case 'monthly':
        const monthEnd = new Date(now);
        monthEnd.setMonth(monthEnd.getMonth() + 1);
        return monthEnd;
      case 'custom':
        if (customMinutes) {
          return new Date(now.getTime() + customMinutes * 60 * 1000);
        }
        // –ï—Å–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Å—è—Ü –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const defaultEnd = new Date(now);
        defaultEnd.setMonth(defaultEnd.getMonth() + 1);
        return defaultEnd;
      default:
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - 2 –º–∏–Ω—É—Ç—ã
        return new Date(now.getTime() + 2 * 60 * 1000);
    }
  }

  async checkExpiredSubscriptions() {
    try {
      console.log('‚è∞ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏...');
      
      const users = await this.database.getAllUsers();
      const now = this.getMoscowTime();
      
      for (const user of users) {
        if (user.status === 'active' && user.subscription_end) {
          // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
          const subscriptionEnd = new Date(user.subscription_end);
          const moscowSubscriptionEnd = new Date(subscriptionEnd.getTime() + (3 * 60 * 60 * 1000));
          
          if (now > moscowSubscriptionEnd) {
            console.log(`‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –∏—Å—Ç–µ–∫–ª–∞. –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: ${now.toLocaleString('ru-RU')}, –æ–∫–æ–Ω—á–∞–Ω–∏–µ: ${moscowSubscriptionEnd.toLocaleString('ru-RU')}`);
            
            await this.database.updateUserStatus(user.telegram_id, 'inactive');
            await this.database.setAutoPayment(user.telegram_id, false);
            
            await this.database.logSubscriptionAction(
              user.id,
              'subscription_expired',
              '–ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞'
            );

            if (this.telegramBot && this.telegramBot.bot) {
              try {
                await this.telegramBot.bot.sendMessage(user.telegram_id, `
‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞

üìÖ –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è: ${moscowSubscriptionEnd.toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
üîí –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –æ—Ç–æ–∑–≤–∞–Ω
‚ùå –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª—é—á–µ–Ω

–î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:
üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É: /start
üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: /profile
                `);
              } catch (notifyError) {
                console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:`, notifyError);
              }
            }

            // –ö–∏–∫–∞–µ–º –∏–∑ –∫–∞–Ω–∞–ª–∞ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
            if (this.telegramBot && this.telegramBot.PRIVATE_CHANNEL_ID) {
              await this.telegramBot.checkAndManageChannelMember(
                this.telegramBot.PRIVATE_CHANNEL_ID, 
                user.telegram_id
              );
            }
          } else {
            // –õ–æ–≥–∏—Ä—É–µ–º —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –µ—â–µ –∞–∫—Ç–∏–≤–Ω–∞
            const timeLeft = moscowSubscriptionEnd.getTime() - now.getTime();
            const minutesLeft = Math.floor(timeLeft / (1000 * 60));
            console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.telegram_id} –∞–∫—Ç–∏–≤–Ω–∞ –µ—â–µ ${minutesLeft} –º–∏–Ω—É—Ç`);
          }
        }
      }
      
      console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫:', error);
    }
  }
}
