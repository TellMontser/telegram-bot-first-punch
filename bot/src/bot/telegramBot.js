import TelegramBot from 'node-telegram-bot-api';

export class TelegramBotService {
  constructor(database, yookassaService, paymentScheduler) {
    this.database = database;
    this.yookassaService = yookassaService;
    this.paymentScheduler = paymentScheduler;
    
    // ID –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ (–ø–æ–ª—É—á–∏—Ç–µ —á–µ—Ä–µ–∑ @userinfobot)
    this.PRIVATE_CHANNEL_ID = process.env.PRIVATE_CHANNEL_ID || '-1002876590285';
    this.PRIVATE_CHANNEL_LINK = 'https://t.me/+TEw_Ql5PbLIxNmMy';
    
    // –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∫–∞–Ω–∞–ª–∞ (Telegram ID)
    this.CHANNEL_ADMINS = (process.env.CHANNEL_ADMINS || '794139414,1139585647').split(',').map(id => parseInt(id.trim())).filter(id => !isNaN(id));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    const botToken = process.env.BOT_TOKEN;
    if (!botToken) {
      throw new Error('BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã');
    }
    
    console.log('ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º:', botToken.substring(0, 15) + '...');
    console.log('üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª ID:', this.PRIVATE_CHANNEL_ID);
    console.log('üëë –ê–¥–º–∏–Ω—ã –∫–∞–Ω–∞–ª–∞:', this.CHANNEL_ADMINS);
    console.log('üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:', this.PRIVATE_CHANNEL_LINK);
    
    // –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –±–µ–∑ polling –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    this.bot = new TelegramBot(botToken, { 
      polling: false,
      webHook: false
    });
    this.isStarted = false;
  }

  async start() {
    if (this.isStarted) {
      console.log('‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω');
      return;
    }
    
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞...');
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
      const me = await this.bot.getMe();
      console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', me.username, `(ID: ${me.id})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
      await this.checkBotPermissions();
      
      this.setupCommands();
      this.setupCallbacks();
      this.setupChannelManagement();
      
      if (process.env.WEBHOOK_URL) {
        const webhookUrl = `${process.env.WEBHOOK_URL}/webhook/telegram`;
        console.log('üîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook:', webhookUrl);
        
        try {
          // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
          console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook...');
          await this.bot.deleteWebHook();
          
          // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
          await new Promise(resolve => setTimeout(resolve, 1000));
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
          console.log('üì° –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook...');
          const result = await this.bot.setWebHook(webhookUrl, {
            drop_pending_updates: true
          });
          
          if (result) {
            console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
            const webhookInfo = await this.bot.getWebHookInfo();
            console.log('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:', {
              url: webhookInfo.url,
              has_custom_certificate: webhookInfo.has_custom_certificate,
              pending_update_count: webhookInfo.pending_update_count,
              last_error_date: webhookInfo.last_error_date,
              last_error_message: webhookInfo.last_error_message
            });
          } else {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook');
          }
        } catch (webhookError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:', webhookError);
          console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ polling...');
          
          await this.bot.startPolling({
            restart: true,
            polling: {
              interval: 1000,
              autoStart: true,
              params: {
                timeout: 10
              }
            }
          });
          console.log('‚úÖ Polling –∑–∞–ø—É—â–µ–Ω');
        }
      } else {
        console.log('‚ö†Ô∏è WEBHOOK_URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º polling');
        await this.bot.startPolling({
          restart: true,
          polling: {
            interval: 1000,
            autoStart: true,
            params: {
              timeout: 10
            }
          }
        });
        console.log('‚úÖ Polling –∑–∞–ø—É—â–µ–Ω');
      }
      
      this.isStarted = true;
      console.log('üéâ Telegram –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Telegram –±–æ—Ç–∞:', error);
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
      if (error.response) {
        console.error('üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.body);
      }
      
      throw error;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
  async checkBotPermissions() {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ...');
      
      const me = await this.bot.getMe();
      const chatMember = await this.bot.getChatMember(this.PRIVATE_CHANNEL_ID, me.id);
      
      console.log('ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ:', chatMember.status);
      console.log('üîë –ü—Ä–∞–≤–∞ –±–æ—Ç–∞:', {
        can_restrict_members: chatMember.can_restrict_members,
        can_invite_users: chatMember.can_invite_users,
        can_delete_messages: chatMember.can_delete_messages
      });
      
      if (chatMember.status !== 'administrator') {
        console.warn('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞!');
        console.warn('üìã –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º —Å –ø—Ä–∞–≤–∞–º–∏:');
        console.warn('   - –£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤');
        console.warn('   - –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        console.warn('   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ');
      } else {
        console.log('‚úÖ –ë–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –∫–∞–Ω–∞–ª–µ');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ:', error);
      console.warn('‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:');
      console.warn('   1. –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
      console.warn('   2. ID –∫–∞–Ω–∞–ª–∞ —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ:', this.PRIVATE_CHANNEL_ID);
      console.warn('   3. –ë–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏');
    }
  }

  async stop() {
    if (!this.isStarted) return;
    
    try {
      console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Telegram –±–æ—Ç–∞...');
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º polling –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
      if (this.bot.isPolling()) {
        await this.bot.stopPolling();
        console.log('‚úÖ Polling –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      }
      
      // –£–¥–∞–ª—è–µ–º webhook –µ—Å–ª–∏ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      try {
        await this.bot.deleteWebHook();
        console.log('‚úÖ Webhook —É–¥–∞–ª–µ–Ω');
      } catch (error) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)');
      }
      
      this.isStarted = false;
      console.log('‚úÖ Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞:', error);
    }
  }

  setupCommands() {
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞...');
    
    this.bot.onText(/\/start(?:\s+(.+))?/, async (msg, match) => {
      const chatId = msg.chat.id;
      const startParam = match?.[1]; // –ü–∞—Ä–∞–º–µ—Ç—Ä –ø–æ—Å–ª–µ /start
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`, startParam ? `—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º: ${startParam}` : '');
      
      try {
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        let existingUser = await this.database.getUserByTelegramId(chatId);
        
        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        let referralSource = existingUser?.referral_source || null;
        let referralLinkId = existingUser?.referral_link_id || null;
        let customAmount = null;
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞, –ø–æ–ª—É—á–∞–µ–º —Å—É–º–º—É
        if (referralLinkId) {
          const { data: referralLink } = await this.database.supabase
            .from('referral_links')
            .select('subscription_amount')
            .eq('id', referralLinkId)
            .single();
          
          if (referralLink) {
            customAmount = referralLink.subscription_amount;
          }
        }
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π –∏–ª–∏ –µ—â–µ –Ω–µ –∏–º–µ–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        if (startParam && startParam.startsWith('ref_') && (!existingUser || !existingUser.referral_source)) {
          console.log(`üîó –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${startParam}`);
          
          // –õ–æ–≥–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
          await this.database.supabase.rpc('log_referral_action', {
            p_referral_code: startParam,
            p_telegram_id: chatId,
            p_action_type: 'click'
          });
          
          // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
          const { data: referralLink, error } = await this.database.supabase
            .from('referral_links')
            .select('*')
            .eq('code', startParam)
            .eq('is_active', true)
            .single();
          
          if (!error && referralLink) {
            referralSource = `–†–µ—Ñ. ${referralLink.referrer_name}`;
            referralLinkId = referralLink.id;
            customAmount = referralLink.subscription_amount;
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink.referrer_name}, —Å—É–º–º–∞: ${customAmount} ‚ÇΩ`);
            
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            if (existingUser) {
              await this.database.supabase
                .from('users')
                .update({
                  referral_source: referralSource,
                  referral_link_id: referralLinkId
                })
                .eq('telegram_id', chatId);
              
              console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
            }
          }
        }
        
        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let user;
        if (existingUser) {
          // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–∏–º—è, username –º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è)
          await this.database.supabase
            .from('users')
            .update({
              username: msg.from.username,
              first_name: msg.from.first_name,
              last_name: msg.from.last_name
            })
            .eq('telegram_id', chatId);
          
          // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          user = await this.database.getUserByTelegramId(chatId);
          console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
        } else {
          // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          user = await this.database.createUser(
            chatId,
            msg.from.username,
            msg.from.first_name,
            msg.from.last_name,
            referralSource,
            referralLinkId
          );
          console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${chatId}`);
        }
        
        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º –∏–ª–∏ –æ–±–Ω–æ–≤–∏–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞, –ª–æ–≥–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        if (referralSource && referralLinkId && startParam && startParam.startsWith('ref_')) {
          await this.database.supabase.rpc('log_referral_action', {
            p_referral_code: startParam,
            p_telegram_id: chatId,
            p_action_type: 'register'
          });
          
          console.log(`üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª: ${referralSource}`);
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—É–º–º—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if (user.referral_link_id && !customAmount) {
          const { data: referralLink } = await this.database.supabase
            .from('referral_links')
            .select('subscription_amount')
            .eq('id', user.referral_link_id)
            .single();
          
          if (referralLink) {
            customAmount = referralLink.subscription_amount;
          }
        }

        let welcomeMessage = `
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!

üë§ –í–∞—à —Å—Ç–∞—Ç—É—Å: ${user.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω—ã–π' : '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π'}
${user.referral_source ? `\nüîó –ò—Å—Ç–æ—á–Ω–∏–∫: ${user.referral_source}` : ''}
${customAmount ? `\nüí∞ –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –≤–∞—Å: ${customAmount} ‚ÇΩ` : ''}

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/subscribe - –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂
/channel - –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
/help - –ü–æ–º–æ—â—å
        `;

        const keyboard = [
          [{ text: customAmount ? `üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (${customAmount} ‚ÇΩ)` : 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscribe' }],
          [{ text: 'üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å', callback_data: 'status' }]
        ];

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–∞–Ω–∞–ª–∞
        if (user.status === 'active') {
          keyboard.push([{ text: 'üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª', callback_data: 'channel_access' }]);
        }

        await this.bot.sendMessage(chatId, welcomeMessage, {
          reply_markup: {
            inline_keyboard: keyboard
          }
        });
        
        console.log(`‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start:', error);
        await this.bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    });

    this.bot.onText(/\/subscribe/, async (msg) => {
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /subscribe –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.chat.id}`);
      await this.handleSubscribe(msg.chat.id);
    });

    this.bot.onText(/\/status/, async (msg) => {
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /status –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.chat.id}`);
      await this.handleStatus(msg.chat.id);
    });

    this.bot.onText(/\/cancel/, async (msg) => {
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /cancel –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.chat.id}`);
      await this.handleCancelAutoPayment(msg.chat.id);
    });

    this.bot.onText(/\/channel/, async (msg) => {
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /channel –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.chat.id}`);
      await this.handleChannelAccess(msg.chat.id);
    });

    this.bot.onText(/\/help/, async (msg) => {
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.chat.id}`);
      
      const helpMessage = `
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/subscribe - –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ 10 —Ä—É–±
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂
/channel - –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

üí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
1. –ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂ - 10 —Ä—É–±
2. –ó–∞—Ç–µ–º –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è 10 —Ä—É–±
3. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
4. –ü—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É

üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª:
- –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º
- –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
      `;

      await this.bot.sendMessage(msg.chat.id, helpMessage);
    });
    
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

  setupCallbacks() {
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º callback queries...');
    
    this.bot.on('callback_query', async (callbackQuery) => {
      const chatId = callbackQuery.message.chat.id;
      const data = callbackQuery.data;
      
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω callback query: ${data} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);

      try {
        await this.bot.answerCallbackQuery(callbackQuery.id);

        switch (data) {
          case 'subscribe':
            await this.handleSubscribe(chatId);
            break;
          case 'status':
            await this.handleStatus(chatId);
            break;
          case 'cancel_auto':
            await this.handleCancelAutoPayment(chatId);
            break;
          case 'channel_access':
            await this.handleChannelAccess(chatId);
            break;
          default:
            console.log(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback query: ${data}`);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ callback query:', error);
      }
    });
    
    console.log('‚úÖ Callback queries –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–º
  setupChannelManagement() {
    console.log('üîí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç—ã–º –∫–∞–Ω–∞–ª–æ–º...');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    this.bot.on('chat_join_request', async (chatJoinRequest) => {
      const userId = chatJoinRequest.from.id;
      const chatId = chatJoinRequest.chat.id;
      const username = chatJoinRequest.from.username;
      const firstName = chatJoinRequest.from.first_name;
      const lastName = chatJoinRequest.from.last_name;
      
      console.log(`üîë –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} (@${username}) –≤ —á–∞—Ç ${chatId}`);
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª: –æ–∂–∏–¥–∞–µ–º ${this.PRIVATE_CHANNEL_ID}, –ø–æ–ª—É—á–∏–ª–∏ ${chatId}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–∞—à –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª
      if (chatId.toString() !== this.PRIVATE_CHANNEL_ID.toString()) {
        console.log(`‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å –Ω–µ –¥–ª—è –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞: –ø–æ–ª—É—á–µ–Ω ${chatId}, –æ–∂–∏–¥–∞–µ—Ç—Å—è ${this.PRIVATE_CHANNEL_ID}`);
        return;
      }

      try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await this.database.createChannelRequest(userId, username, firstName, lastName);
        console.log(`üìù –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
        
        console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const user = await this.database.getUserByTelegramId(userId);
        
        if (!user) {
          console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
          
          try {
            await this.bot.declineChatJoinRequest(chatId, userId);
            console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç ${userId} –æ—Ç–∫–ª–æ–Ω–µ–Ω`);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const request = await this.database.getChannelRequestByUserId(userId);
            if (request) {
              await this.database.updateChannelRequestStatus(request.id, 'declined', 'auto_system');
            }
          } catch (declineError) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç ${userId}:`, declineError);
          }
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          try {
            const botInfo = await this.bot.getMe();
            await this.bot.sendMessage(userId, `
‚ùå –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –∑–∞–ø—Ä–µ—â–µ–Ω

–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É:

1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: /start
2. –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É: /subscribe
3. –ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É

ü§ñ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º: @${botInfo.username}
            `);
            console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏`);
          } catch (dmError) {
            console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å DM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, dmError.message);
          }
          return;
        }

        console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–∞–π–¥–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${user.status}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        if (user.status === 'active') {
          console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –æ–¥–æ–±—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å`);
          
          try {
            await this.bot.approveChatJoinRequest(chatId, userId);
            console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç ${userId} –æ–¥–æ–±—Ä–µ–Ω`);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const request = await this.database.getChannelRequestByUserId(userId);
            if (request) {
              await this.database.updateChannelRequestStatus(request.id, 'approved', 'auto_system');
            }
            
            // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            await this.database.logSubscriptionAction(
              user.id,
              'channel_access_granted',
              `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É`
            );

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try {
              await this.bot.sendMessage(userId, `
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª!

‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω
üîí –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
üíé –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–µ–º–∏—É–º-–º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏!

‚ö†Ô∏è –ü–æ–º–Ω–∏—Ç–µ: –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ
              `);
              console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
            } catch (dmError) {
              console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, dmError.message);
            }
          } catch (approveError) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç ${userId}:`, approveError);
          }
          
        } else {
          console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ (—Å—Ç–∞—Ç—É—Å: ${user.status}), –æ—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å`);
          
          try {
            await this.bot.declineChatJoinRequest(chatId, userId);
            console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç ${userId} –æ—Ç–∫–ª–æ–Ω–µ–Ω`);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const request = await this.database.getChannelRequestByUserId(userId);
            if (request) {
              await this.database.updateChannelRequestStatus(request.id, 'declined', 'auto_system');
            }
            
            // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            await this.database.logSubscriptionAction(
              user.id,
              'channel_access_denied',
              `–î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –æ—Ç–∫–ª–æ–Ω–µ–Ω: –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ (—Å—Ç–∞—Ç—É—Å: ${user.status})`
            );

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
            try {
              await this.bot.sendMessage(userId, `
‚ùå –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –∑–∞–ø—Ä–µ—â–µ–Ω

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.

–í–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${user.status === 'inactive' ? '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω' : user.status}

üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É: /subscribe
üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: /status

–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É.
              `);
              console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
            } catch (dmError) {
              console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, dmError.message);
            }
          } catch (declineError) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç ${userId}:`, declineError);
          }
        }
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ—Ç ${userId}:`, error);
        
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        try {
          await this.bot.declineChatJoinRequest(chatId, userId);
          console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç ${userId} –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏`);
        } catch (declineError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:`, declineError);
        }
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞ (–µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞–ø—Ä—è–º—É—é)
    this.bot.on('new_chat_members', async (msg) => {
      const chatId = msg.chat.id;
      
      console.log(`üë• –ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤ —á–∞—Ç–µ ${chatId}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–∞—à –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª
      if (chatId.toString() !== this.PRIVATE_CHANNEL_ID.toString()) {
        console.log(`‚ö†Ô∏è –°–æ–±—ã—Ç–∏–µ –Ω–µ –¥–ª—è –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞: ${chatId}`);
        return;
      }

      console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ`);
      
      for (const newMember of msg.new_chat_members) {
        console.log(`üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞: ${newMember.id} (@${newMember.username})`);
        await this.checkAndManageChannelMember(chatId, newMember.id);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫–∏–Ω—É–≤—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    this.bot.on('left_chat_member', async (msg) => {
      const chatId = msg.chat.id;
      const leftMember = msg.left_chat_member;
      
      if (chatId.toString() === this.PRIVATE_CHANNEL_ID.toString()) {
        console.log(`üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${leftMember.id} (@${leftMember.username}) –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª`);
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
        try {
          const user = await this.database.getUserByTelegramId(leftMember.id);
          if (user) {
            await this.database.logSubscriptionAction(
              user.id,
              'channel_left',
              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª'
            );
          }
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${leftMember.id}:`, error);
        }
      }
    });

    console.log('‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ');
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞
  async checkAndManageChannelMember(chatId, userId) {
    try {
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${userId} –≤ –∫–∞–Ω–∞–ª–µ ${chatId}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ
      if (this.CHANNEL_ADMINS.includes(userId)) {
        console.log(`üëë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º –∫–∞–Ω–∞–ª–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É`);
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const user = await this.database.getUserByTelegramId(userId);
      
      if (!user || user.status !== 'active') {
        console.log(`üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ (—Å—Ç–∞—Ç—É—Å: ${user?.status || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}), —É–¥–∞–ª—è–µ–º –∏–∑ –∫–∞–Ω–∞–ª–∞`);
        
        try {
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º banChatMember –≤–º–µ—Å—Ç–æ kickChatMember
          console.log(`üö´ –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);
          await this.bot.banChatMember(chatId, userId);
          console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–±–∞–Ω–µ–Ω`);
          
          // –°—Ä–∞–∑—É —Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ–º, —á—Ç–æ–±—ã –º–æ–≥ –ø–æ–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å —Å–Ω–æ–≤–∞
          setTimeout(async () => {
            try {
              await this.bot.unbanChatMember(chatId, userId);
              console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Ä–∞–∑–±–∞–Ω–µ–Ω`);
            } catch (unbanError) {
              console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, unbanError);
            }
          }, 1000);
          
          // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
          if (user) {
            await this.database.logSubscriptionAction(
              user.id,
              'channel_access_revoked',
              `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞: –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ (—Å—Ç–∞—Ç—É—Å: ${user.status})`
            );
          }

          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          try {
            await this.bot.sendMessage(userId, `
üö´ –í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞

–ü—Ä–∏—á–∏–Ω–∞: ${user ? `–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ (—Å—Ç–∞—Ç—É—Å: ${user.status})` : '–Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ'}

–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞:
${user ? 'üí≥ –ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É: /subscribe' : 'ü§ñ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –±–æ—Ç–µ: /start'}
üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: /status

–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É.
            `);
            console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
          } catch (dmError) {
            console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, dmError.message);
          }
          
        } catch (banError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, banError);
          
          // –ï—Å–ª–∏ banChatMember –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º restrictChatMember
          try {
            console.log(`üîÑ –ü—ã—Ç–∞–µ–º—Å—è –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);
            await this.bot.restrictChatMember(chatId, userId, {
              can_send_messages: false,
              can_send_media_messages: false,
              can_send_polls: false,
              can_send_other_messages: false,
              can_add_web_page_previews: false,
              can_change_info: false,
              can_invite_users: false,
              can_pin_messages: false
            });
            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –ø—Ä–∞–≤–∞—Ö`);
          } catch (restrictError) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, restrictError);
          }
        }
      } else {
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –æ—Å—Ç–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª–µ`);
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${userId}:`, error);
    }
  }

  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞
  async performChannelAudit() {
    try {
      console.log('üîç –í—ã–ø–æ–ª–Ω—è–µ–º –∞—É–¥–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞...');
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
      const chatMemberCount = await this.bot.getChatMemberCount(this.PRIVATE_CHANNEL_ID);
      console.log(`üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ: ${chatMemberCount}`);
      
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
      const chatAdmins = await this.bot.getChatAdministrators(this.PRIVATE_CHANNEL_ID);
      console.log(`üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ: ${chatAdmins.length}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∫—Ä–æ–º–µ –±–æ—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è)
      for (const admin of chatAdmins) {
        if (!admin.user.is_bot && admin.status !== 'creator' && !this.CHANNEL_ADMINS.includes(admin.user.id)) {
          console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${admin.user.id} (@${admin.user.username})`);
          await this.checkAndManageChannelMember(this.PRIVATE_CHANNEL_ID, admin.user.id);
        }
      }
      
      console.log('‚úÖ –ê—É–¥–∏—Ç –∫–∞–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—É–¥–∏—Ç–µ –∫–∞–Ω–∞–ª–∞:', error);
      
      if (error.response?.body?.error_code === 400) {
        console.error('üìã –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏:');
        console.error('   - –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞');
        console.error('   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞');
        console.error('   - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ —É –±–æ—Ç–∞');
      }
    }
  }

  // === API –ú–ï–¢–û–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–ê–ù–ê–õ–û–ú ===

  // –û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ API
  async approveChannelRequestAPI(requestId) {
    try {
      console.log(`‚úÖ API: –û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ ${requestId}`);
      
      const request = await this.database.getChannelRequestById(requestId);
      if (!request) {
        throw new Error('–ó–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      if (request.status !== 'pending') {
        throw new Error('–ó–∞–ø—Ä–æ—Å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
      }

      // –û–¥–æ–±—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram
      await this.bot.approveChatJoinRequest(this.PRIVATE_CHANNEL_ID, request.user_id);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await this.database.updateChannelRequestStatus(requestId, 'approved', 'admin_panel');
      
      // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
      const user = await this.database.getUserByTelegramId(request.user_id);
      if (user) {
        await this.database.logSubscriptionAction(
          user.id,
          'channel_request_approved_manual',
          `–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å`
        );
      }

      console.log(`‚úÖ API: –ó–∞–ø—Ä–æ—Å ${requestId} —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω`);
      return true;
    } catch (error) {
      console.error(`‚ùå API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ ${requestId}:`, error);
      throw error;
    }
  }

  // –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ API
  async declineChannelRequestAPI(requestId) {
    try {
      console.log(`‚ùå API: –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ ${requestId}`);
      
      const request = await this.database.getChannelRequestById(requestId);
      if (!request) {
        throw new Error('–ó–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      if (request.status !== 'pending') {
        throw new Error('–ó–∞–ø—Ä–æ—Å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
      }

      // –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram
      await this.bot.declineChatJoinRequest(this.PRIVATE_CHANNEL_ID, request.user_id);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await this.database.updateChannelRequestStatus(requestId, 'declined', 'admin_panel');
      
      // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
      const user = await this.database.getUserByTelegramId(request.user_id);
      if (user) {
        await this.database.logSubscriptionAction(
          user.id,
          'channel_request_declined_manual',
          `–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å`
        );
      }

      console.log(`‚úÖ API: –ó–∞–ø—Ä–æ—Å ${requestId} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω`);
      return true;
    } catch (error) {
      console.error(`‚ùå API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ ${requestId}:`, error);
      throw error;
    }
  }

  async handleSubscribe(chatId) {
    try {
      console.log(`üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
      
      const user = await this.database.getUserByTelegramId(chatId);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—É–º–º—É –ø–æ–¥–ø–∏—Å–∫–∏ (—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è)
      let subscriptionAmount = 10.00;
      
      if (user.referral_link_id) {
        // –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∏–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        const { data: referralLink } = await this.database.supabase
          .from('referral_links')
          .select('subscription_amount')
          .eq('id', user.referral_link_id)
          .single();
        
        if (referralLink) {
          subscriptionAmount = parseFloat(referralLink.subscription_amount);
          console.log(`üí∞ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Ü–µ–Ω—É: ${subscriptionAmount} ‚ÇΩ`);
        }
      }
      
      if (user.status === 'active' && user.auto_payment_enabled) {
        await this.bot.sendMessage(chatId, `
‚úÖ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–æ–º!

üîí –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É: /channel
üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: /status
        `);
        return;
      }

      // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –ë–ï–ó return_url - –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Æ–ö–∞—Å—Å—ã
      const payment = await this.yookassaService.createPayment(
        subscriptionAmount,
        `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–∏—Å - –ø–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂${user.referral_source ? ` (${user.referral_source})` : ''}`,
        null, // –£–±–∏—Ä–∞–µ–º return_url –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        true
      );

      await this.database.createPayment(
        user.id,
        payment.id,
        subscriptionAmount,
        payment.status
      );

      await this.bot.sendMessage(chatId, 
        `üí≥ –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n\n${payment.confirmation.confirmation_url}\n\nüí∞ –°—É–º–º–∞: ${subscriptionAmount} —Ä—É–±${user.referral_source ? ` (—Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –æ—Ç ${user.referral_source})` : ''}\n‚è∞ –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã –±—É–¥–µ—Ç —Å–ø–∏—Å—ã–≤–∞—Ç—å—Å—è ${subscriptionAmount} —Ä—É–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\nüîí –ü—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É\n\nüì± –û–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Æ–ö–∞—Å—Å—ã`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å—É', url: payment.confirmation.confirmation_url }]
            ]
          }
        }
      );
      
      console.log(`‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${payment.id}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
      await this.bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  }

  async handleStatus(chatId) {
    try {
      console.log(`üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
      
      const user = await this.database.getUserByTelegramId(chatId);
      
      let statusMessage = `üìä –í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:\n\n`;
      statusMessage += `üë§ –°—Ç–∞—Ç—É—Å: ${user.status === 'active' ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n`;
      statusMessage += `üîÑ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂: ${user.auto_payment_enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}\n`;
      
      if (user.subscription_end) {
        statusMessage += `‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: ${new Date(user.subscription_end).toLocaleString('ru')}\n`;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
      if (user.status === 'active') {
        statusMessage += `\nüîí –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É: ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω`;
      } else {
        statusMessage += `\nüîí –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É: ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞`;
      }

      const keyboard = [];
      
      if (user.status !== 'active') {
        keyboard.push([{ text: 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscribe' }]);
      } else {
        keyboard.push([{ text: 'üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª', callback_data: 'channel_access' }]);
      }
      
      if (user.auto_payment_enabled) {
        keyboard.push([{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂', callback_data: 'cancel_auto' }]);
      }

      await this.bot.sendMessage(chatId, statusMessage, {
        reply_markup: {
          inline_keyboard: keyboard
        }
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
      await this.bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞.');
    }
  }

  async handleChannelAccess(chatId) {
    try {
      console.log(`üîí –ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
      
      const user = await this.database.getUserByTelegramId(chatId);
      
      if (user.status !== 'active') {
        await this.bot.sendMessage(chatId, `
‚ùå –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –∑–∞–ø—Ä–µ—â–µ–Ω

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.

üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É: /subscribe
üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: /status
        `);
        return;
      }

      await this.bot.sendMessage(chatId, `
üîí –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É

‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!
üéâ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º.

üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è:
${this.PRIVATE_CHANNEL_LINK}

‚ö†Ô∏è –í–∞–∂–Ω–æ:
‚Ä¢ –î–æ—Å—Ç—É–ø –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ
‚Ä¢ –ü—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–æ–∑–≤–∞–Ω
‚Ä¢ –ù–µ –¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

üíé –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º!
      `, {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üîó –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url: this.PRIVATE_CHANNEL_LINK }],
            [{ text: 'üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å', callback_data: 'status' }]
          ]
        }
      });

      // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞
      await this.database.logSubscriptionAction(
        user.id,
        'channel_link_requested',
        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª'
      );
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É:', error);
      await this.bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É.');
    }
  }

  async handleCancelAutoPayment(chatId) {
    try {
      console.log(`‚ùå –û—Ç–º–µ–Ω–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
      
      const user = await this.database.getUserByTelegramId(chatId);
      
      if (!user.auto_payment_enabled) {
        await this.bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ –≤–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂.');
        return;
      }

      await this.database.setAutoPayment(chatId, false);
      await this.database.logSubscriptionAction(
        user.id,
        'auto_payment_cancelled',
        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂'
      );

      await this.bot.sendMessage(chatId, `
‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω

–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.

‚ö†Ô∏è –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –±—É–¥–µ—Ç –æ—Ç–æ–∑–≤–∞–Ω
‚Ä¢ –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞

üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: /status
üí≥ –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É: /subscribe
      `);
      
      console.log(`‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞:', error);
      await this.bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞.');
    }
  }

  async handlePaymentSuccess(paymentId) {
    try {
      console.log(`üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞: ${paymentId}`);
      
      const payment = await this.database.getPaymentByPaymentId(paymentId);
      if (!payment) {
        console.error('‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', paymentId);
        return;
      }

      await this.database.updatePaymentStatus(paymentId, 'succeeded', new Date().toISOString());
      
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const subscriptionEnd = new Date();
      subscriptionEnd.setMinutes(subscriptionEnd.getMinutes() + 3);
      
      await this.database.updateUserStatus(payment.telegram_id, 'active', subscriptionEnd.toISOString());
      await this.database.setAutoPayment(payment.telegram_id, true);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º payment method –¥–ª—è —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
      const yookassaPayment = await this.yookassaService.getPayment(paymentId);
      if (yookassaPayment.payment_method && yookassaPayment.payment_method.id) {
        await this.database.updateUserPaymentMethod(payment.telegram_id, yookassaPayment.payment_method.id);
      }

      // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
      const user = await this.database.getUserByTelegramId(payment.telegram_id);
      if (user && user.referral_link_id) {
        const { data: referralLink } = await this.database.supabase
          .from('referral_links')
          .select('code')
          .eq('id', user.referral_link_id)
          .single();
        
        if (referralLink) {
          await this.database.supabase.rpc('log_referral_action', {
            p_referral_code: referralLink.code,
            p_telegram_id: payment.telegram_id,
            p_action_type: 'payment',
            p_amount: payment.amount,
            p_details: `–ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ`
          });
          
          console.log(`üí∞ –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂: ${payment.amount} ‚ÇΩ`);
        }
      }
      await this.database.logSubscriptionAction(
        payment.user_id,
        'payment_success',
        `–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –°—É–º–º–∞: ${payment.amount} —Ä—É–±`
      );

      await this.bot.sendMessage(
        payment.telegram_id,
        `‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!

üí∞ –°—É–º–º–∞: ${payment.amount} —Ä—É–±
üîÑ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
‚è∞ –°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã
üîí –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –æ—Ç–∫—Ä—ã—Ç!

üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!

–ö–æ–º–∞–Ω–¥—ã:
/channel - –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª', callback_data: 'channel_access' }],
              [{ text: 'üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å', callback_data: 'status' }]
            ]
          }
        }
      );
      
      console.log(`‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${payment.telegram_id}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞:', error);
    }
  }

  async processWebhook(req, res) {
    try {
      const update = req.body;
      console.log('üì® –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Telegram:', JSON.stringify(update, null, 2));
      
      await this.bot.processUpdate(update);
      res.status(200).send('OK');
      
      console.log('‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook:', error);
      res.status(500).send('Error');
    }
  }
}
