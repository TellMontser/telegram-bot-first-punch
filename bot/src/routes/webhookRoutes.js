import express from 'express';

export function webhookRoutes(telegramBot, yookassaService, cryptoCloudService = null) {
  const router = express.Router();

  // Webhook –¥–ª—è Telegram
  router.post('/telegram', async (req, res) => {
    console.log('üì® –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Telegram');
    await telegramBot.processWebhook(req, res);
  });

  // Webhook –¥–ª—è –ÆKassa
  router.post('/yookassa', async (req, res) => {
    try {
      const notification = req.body;
      console.log('üí∞ –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç –ÆKassa:', JSON.stringify(notification, null, 2));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
      if (notification.event === 'payment.succeeded') {
        const paymentId = notification.object.id;
        console.log(`‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω: ${paymentId}`);
        
        await telegramBot.handlePaymentSuccess(paymentId);
      } else if (notification.event === 'payment.canceled') {
        const paymentId = notification.object.id;
        console.log(`‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω: ${paymentId}`);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
      } else {
        console.log(`‚ÑπÔ∏è –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: ${notification.event}`);
      }

      res.status(200).json({ status: 'ok' });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook –ÆKassa:', error);
      res.status(500).json({ error: 'Internal server error' });
    }
  });

  // Webhook –¥–ª—è CryptoCloud
  router.post('/callback', async (req, res) => {
    try {
      const notification = req.body;
      console.log('‚Çø –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç CryptoCloud:', JSON.stringify(notification, null, 2));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω —Å–µ—Ä–≤–∏—Å
      if (cryptoCloudService) {
        const signature = req.headers['x-signature'] || req.headers['signature'];
        if (signature && !cryptoCloudService.verifyWebhookSignature(notification, signature)) {
          console.error('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å CryptoCloud webhook');
          return res.status(400).json({ error: 'Invalid signature' });
        }
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
      if (notification.status === 'paid' || notification.status === 'success') {
        const invoiceId = notification.uuid || notification.invoice_id;
        console.log(`‚úÖ –ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω: ${invoiceId}`);
        
        await telegramBot.handleCryptoPaymentSuccess(invoiceId);
      } else if (notification.status === 'fail' || notification.status === 'cancelled') {
        const invoiceId = notification.uuid || notification.invoice_id;
        console.log(`‚ùå –ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω –∏–ª–∏ –Ω–µ—É—Å–ø–µ—à–µ–Ω: ${invoiceId}`);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
      } else {
        console.log(`‚ÑπÔ∏è –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ CryptoCloud: ${notification.status}`);
      }

      res.status(200).json({ status: 'ok' });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook CryptoCloud:', error);
      res.status(500).json({ error: 'Internal server error' });
    }
  });

  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã (–Æ–ö–∞—Å—Å–∞)
  router.get('/payment-success', async (req, res) => {
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã');
    
    res.send(`<!DOCTYPE html>
<html lang="ru">
  <head>
    <title>–û–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      body { 
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
        color: white;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
      }
      
      .container {
        background: rgba(255, 255, 255, 0.15);
        padding: 50px;
        border-radius: 25px;
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        max-width: 600px;
        width: 100%;
        text-align: center;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
      }
      
      .success-icon {
        font-size: 100px;
        margin-bottom: 30px;
        animation: bounce 2s infinite;
      }
      
      @keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
          transform: translateY(0);
        }
        40% {
          transform: translateY(-10px);
        }
        60% {
          transform: translateY(-5px);
        }
      }
      
      h1 { 
        margin-bottom: 25px;
        font-size: 2.8em;
        font-weight: 700;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      }
      
      p { 
        font-size: 1.3em;
        line-height: 1.7;
        margin-bottom: 20px;
        opacity: 0.95;
      }
      
      .highlight {
        background: rgba(255, 255, 255, 0.2);
        padding: 25px;
        border-radius: 15px;
        margin: 30px 0;
        border: 1px solid rgba(255, 255, 255, 0.3);
      }
      
      .telegram-link {
        display: inline-block;
        background: #0088cc;
        color: white;
        padding: 15px 30px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        margin-top: 20px;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 136, 204, 0.4);
      }
      
      .telegram-link:hover {
        background: #006699;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 136, 204, 0.6);
      }
      
      .features {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-top: 30px;
      }
      
      .feature {
        background: rgba(255, 255, 255, 0.1);
        padding: 20px;
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.2);
      }
      
      .feature-icon {
        font-size: 2em;
        margin-bottom: 10px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="success-icon">‚úÖ</div>
      <h1>–û–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h1>
      <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.</p>
      
      <div class="highlight">
        <p><strong>üéâ –ß—Ç–æ –¥–∞–ª—å—à–µ?</strong></p>
        <p>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –±–æ—Ç.</p>
        <p>–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã.</p>
      </div>
      
      <div class="features">
        <div class="feature">
          <div class="feature-icon">üîÑ</div>
          <p><strong>–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂</strong><br>–ö–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã</p>
        </div>
        <div class="feature">
          <div class="feature-icon">üí∞</div>
          <p><strong>–°—É–º–º–∞</strong><br>10 —Ä—É–±–ª–µ–π</p>
        </div>
        <div class="feature">
          <div class="feature-icon">üì±</div>
          <p><strong>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</strong><br>–ß–µ—Ä–µ–∑ Telegram –±–æ—Ç</p>
        </div>
      </div>
      
      <a href="https://t.me/your_bot_username" class="telegram-link">
        üì± –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram –±–æ—Ç
      </a>
      
      <p style="margin-top: 30px; font-size: 1em; opacity: 0.8;">
        –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram.
      </p>
    </div>
  </body>
</html>`);
  });

  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–æ–ø–ª–∞—Ç—ã
  router.get('/successful-payment', async (req, res) => {
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—à–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–æ–ø–ª–∞—Ç—ã');
    
    res.send(`<!DOCTYPE html>
<html lang="ru">
  <head>
    <title>–ö—Ä–∏–ø—Ç–æ–æ–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      body { 
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
      }
      
      .container {
        background: rgba(255, 255, 255, 0.15);
        padding: 50px;
        border-radius: 25px;
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        max-width: 600px;
        width: 100%;
        text-align: center;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
      }
      
      .success-icon {
        font-size: 100px;
        margin-bottom: 30px;
        animation: bounce 2s infinite;
      }
      
      @keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
          transform: translateY(0);
        }
        40% {
          transform: translateY(-10px);
        }
        60% {
          transform: translateY(-5px);
        }
      }
      
      h1 { 
        margin-bottom: 25px;
        font-size: 2.8em;
        font-weight: 700;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      }
      
      p { 
        font-size: 1.3em;
        line-height: 1.7;
        margin-bottom: 20px;
        opacity: 0.95;
      }
      
      .highlight {
        background: rgba(255, 255, 255, 0.2);
        padding: 25px;
        border-radius: 15px;
        margin: 30px 0;
        border: 1px solid rgba(255, 255, 255, 0.3);
      }
      
      .telegram-link {
        display: inline-block;
        background: #0088cc;
        color: white;
        padding: 15px 30px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        margin-top: 20px;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 136, 204, 0.4);
      }
      
      .telegram-link:hover {
        background: #006699;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 136, 204, 0.6);
      }
      
      .features {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-top: 30px;
      }
      
      .feature {
        background: rgba(255, 255, 255, 0.1);
        padding: 20px;
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.2);
      }
      
      .feature-icon {
        font-size: 2em;
        margin-bottom: 10px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="success-icon">‚Çø</div>
      <h1>–ö—Ä–∏–ø—Ç–æ–æ–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h1>
      <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.</p>
      
      <div class="highlight">
        <p><strong>üéâ –ß—Ç–æ –¥–∞–ª—å—à–µ?</strong></p>
        <p>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –±–æ—Ç.</p>
        <p>–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã.</p>
      </div>
      
      <div class="features">
        <div class="feature">
          <div class="feature-icon">üîÑ</div>
          <p><strong>–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂</strong><br>–ö–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã</p>
        </div>
        <div class="feature">
          <div class="feature-icon">‚Çø</div>
          <p><strong>–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</strong><br>–ë—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ</p>
        </div>
        <div class="feature">
          <div class="feature-icon">üì±</div>
          <p><strong>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</strong><br>–ß–µ—Ä–µ–∑ Telegram –±–æ—Ç</p>
        </div>
      </div>
      
      <a href="https://t.me/your_bot_username" class="telegram-link">
        üì± –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram –±–æ—Ç
      </a>
      
      <p style="margin-top: 30px; font-size: 1em; opacity: 0.8;">
        –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram.
      </p>
    </div>
  </body>
</html>`);
  });

  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
  router.get('/failed-payment', async (req, res) => {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–µ—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã');
    
    res.send(`<!DOCTYPE html>
<html lang="ru">
  <head>
    <title>–û–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      body { 
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        color: white;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
      }
      
      .container {
        background: rgba(255, 255, 255, 0.15);
        padding: 50px;
        border-radius: 25px;
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        max-width: 600px;
        width: 100%;
        text-align: center;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
      }
      
      .error-icon {
        font-size: 100px;
        margin-bottom: 30px;
      }
      
      h1 { 
        margin-bottom: 25px;
        font-size: 2.8em;
        font-weight: 700;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      }
      
      p { 
        font-size: 1.3em;
        line-height: 1.7;
        margin-bottom: 20px;
        opacity: 0.95;
      }
      
      .telegram-link {
        display: inline-block;
        background: #0088cc;
        color: white;
        padding: 15px 30px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        margin-top: 20px;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 136, 204, 0.4);
      }
      
      .telegram-link:hover {
        background: #006699;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 136, 204, 0.6);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="error-icon">‚ùå</div>
      <h1>–û–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</h1>
      <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ–ø–ª–∞—Ç–∞ –Ω–µ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.</p>
      <p>–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.</p>
      
      <a href="https://t.me/your_bot_username" class="telegram-link">
        üì± –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram –±–æ—Ç
      </a>
      
      <p style="margin-top: 30px; font-size: 1em; opacity: 0.8;">
        –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ –±–æ—Ç.
      </p>
    </div>
  </body>
</html>`);
  });

  return router;
}
