import { 
  getActiveAutoPaymentMethods, 
  updateNextPaymentDate, 
  disableAutoPayments,
  addSubscription,
  getUser,
  addMessage
} from './lib/supabase.js';
import { createAutoSubscriptionPayment } from './payments.js';
import TelegramBot from 'node-telegram-bot-api';

const BOT_TOKEN = '7801546376:AAEr6x5nFu1aIdVUusPzZsJscdL6zzFF6bM';
const bot = new TelegramBot(BOT_TOKEN);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
export async function processAutoPayments() {
  try {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞–º–∏
    const autoPaymentMethods = await getActiveAutoPaymentMethods();
    
    if (autoPaymentMethods.length === 0) {
      console.log('‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
      return;
    }
    
    console.log(`üí≥ –ù–∞–π–¥–µ–Ω–æ ${autoPaymentMethods.length} –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);
    
    for (const paymentMethod of autoPaymentMethods) {
      try {
        console.log(`üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${paymentMethod.user_id}`);
        
        // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂
        const payment = await createAutoSubscriptionPayment(
          paymentMethod.user_id,
          paymentMethod.payment_method_id,
          10 // 10 —Ä—É–±–ª–µ–π
        );
        
        if (payment.status === 'succeeded') {
          // –ü–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ - —Å–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
          await addSubscription(
            paymentMethod.user_id,
            payment.paymentId,
            payment.amount,
            30, // 30 –¥–Ω–µ–π
            'yukassa',
            paymentMethod.payment_method_id
          );
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          await sendAutoPaymentSuccessNotification(paymentMethod.user_id, payment.amount);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (—á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç)
          const nextPaymentDate = new Date(Date.now() + 5 * 60 * 1000).toISOString();
          await updateNextPaymentDate(paymentMethod.payment_method_id, nextPaymentDate);
          
          console.log(`‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${paymentMethod.user_id}`);
        } else {
          console.log(`‚è≥ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${paymentMethod.user_id}`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (—á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏)
          const nextPaymentDate = new Date(Date.now() + 1 * 60 * 1000).toISOString();
          await updateNextPaymentDate(paymentMethod.payment_method_id, nextPaymentDate);
        }
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${paymentMethod.user_id}:`, error);
        
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞), –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏
        if (error.message.includes('blocked') || error.message.includes('expired') || error.message.includes('insufficient')) {
          console.log(`üö´ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${paymentMethod.user_id} –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${error.message}`);
          
          await disableAutoPayments(paymentMethod.payment_method_id);
          await sendAutoPaymentFailureNotification(paymentMethod.user_id, error.message);
        } else {
          // –í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ - –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–∑–∂–µ
          const nextPaymentDate = new Date(Date.now() + 10 * 60 * 1000).toISOString(); // –ß–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç
          await updateNextPaymentDate(paymentMethod.payment_method_id, nextPaymentDate);
        }
      }
    }
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ
async function sendAutoPaymentSuccessNotification(userId, amount) {
  try {
    const user = await getUser(userId);
    if (!user) return;
    
    const message = `‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!

üí≥ –°–ø–∏—Å–∞–Ω–æ: ${amount}‚ÇΩ
üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π
üîÑ –°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂: —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç

–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á" –∞–∫—Ç–∏–≤–Ω–∞!`;

    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üöÄ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url: 'https://t.me/+SQUu4rWliGo5ZjRi' }
          ],
          [
            { text: 'üö´ –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏', callback_data: 'disable_autopayments' },
            { text: 'üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'subscription_status' }
          ]
        ]
      }
    };

    await bot.sendMessage(userId, message, options);
    await addMessage(userId, message, true, 'autopayment_success');
    
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ—É–¥–∞—á–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ
async function sendAutoPaymentFailureNotification(userId, errorMessage) {
  try {
    const user = await getUser(userId);
    if (!user) return;
    
    const message = `‚ùå –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –Ω–µ —É–¥–∞–ª—Å—è

üö´ –ü—Ä–∏—á–∏–Ω–∞: ${errorMessage}
üí≥ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã

–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–ª–∞—Ç–µ–∂ –≤—Ä—É—á–Ω—É—é:`;

    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é', callback_data: 'get_subscription_yukassa' }
          ],
          [
            { text: 'üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'subscription_status' }
          ]
        ]
      }
    };

    await bot.sendMessage(userId, message, options);
    await addMessage(userId, message, true, 'autopayment_failure');
    
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ—É–¥–∞—á–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ—É–¥–∞—á–Ω–æ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
export function startAutoPaymentScheduler() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π...');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  setInterval(async () => {
    try {
      await processAutoPayments();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π:', error);
    }
  }, 60 * 1000); // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  
  console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
export function stopAutoPaymentScheduler() {
  console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π...');
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
}