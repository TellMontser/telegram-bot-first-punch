import TelegramBot from 'node-telegram-bot-api';
import { 
  addOrUpdateUser, 
  addMessage, 
  isSubscriptionActive,
  addPaymentMethod,
  enableAutoPayments,
  disableAutoPayments,
  getUserPaymentMethods,
  getActiveAutoPaymentMethod
} from './lib/supabase.js';
import { createSubscriptionPayment, getAvailablePaymentSystems } from './payments.js';
import { startAutoPayments, stopAutoPayments, getAutoPaymentStatus } from './lib/auto-payments.js';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
export function createMainMenu() {
  return {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscribe' },
          { text: 'üîÑ –ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞', callback_data: 'auto_subscribe' }
        ],
        [
          { text: 'üìã –û –∫–∞–Ω–∞–ª–µ', callback_data: 'about_channel' },
          { text: 'üí∞ –ú–æ–π —Å—Ç–∞—Ç—É—Å', callback_data: 'my_status' }
        ],
        [
          { text: '‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞–º–∏', callback_data: 'manage_auto_payments' }
        ]
      ]
    }
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
export function createPaymentSystemMenu(isRecurring = false) {
  const systems = getAvailablePaymentSystems();
  const keyboard = [];
  
  systems.forEach(system => {
    // –î–ª—è —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Å–∏—Å—Ç–µ–º—ã
    if (isRecurring && !system.supportsRecurring) {
      return;
    }
    
    const callbackData = isRecurring 
      ? `auto_pay_${system.id}` 
      : `pay_${system.id}`;
    
    keyboard.push([{
      text: `${system.icon} ${system.name} (–æ—Ç ${system.minAmount}${system.currency})`,
      callback_data: callbackData
    }]);
  });
  
  keyboard.push([{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]);
  
  return {
    reply_markup: {
      inline_keyboard: keyboard
    }
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞–º–∏
export function createAutoPaymentManagementMenu(hasActiveAutoPayment = false) {
  const keyboard = [];
  
  if (hasActiveAutoPayment) {
    keyboard.push([
      { text: 'üõë –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏', callback_data: 'disable_auto_payments' }
    ]);
    keyboard.push([
      { text: 'üìä –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π', callback_data: 'auto_payment_status' }
    ]);
  } else {
    keyboard.push([
      { text: 'üîÑ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏', callback_data: 'auto_subscribe' }
    ]);
  }
  
  keyboard.push([{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]);
  
  return {
    reply_markup: {
      inline_keyboard: keyboard
    }
  };
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
export async function handleStartCommand(bot, msg) {
  try {
    const chatId = msg.chat.id;
    const user = msg.from;
    
    console.log(`üéØ –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.id}`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await addOrUpdateUser(user);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await addMessage(user.id, '/start', false, 'command');
    
    const welcomeText = `üé≠ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á"!*

–ú—ã –æ–±—ä–µ–¥–∏–Ω—è–µ–º –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ:
‚ú® –†–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–π —é–º–æ—Ä
‚ú® –°—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ  
‚ú® –ù–∞—Ö–æ–¥–∏—Ç—å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤

üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 10 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π*
üîÑ *–î–æ—Å—Ç—É–ø–Ω–∞ –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º*

üëá *–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ* üëá`;

    await bot.sendMessage(chatId, welcomeText, {
      parse_mode: 'Markdown',
      ...createMainMenu()
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await addMessage(user.id, welcomeText, true, 'text');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start:', error);
    await bot.sendMessage(msg.chat.id, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
export async function handleCallbackQuery(bot, callbackQuery) {
  try {
    const chatId = callbackQuery.message.chat.id;
    const messageId = callbackQuery.message.message_id;
    const user = callbackQuery.from;
    const data = callbackQuery.data;
    
    console.log(`üéØ Callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}: ${data}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await addOrUpdateUser(user);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await addMessage(user.id, `–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: ${data}`, false, 'button');
    
    let responseText = '';
    let replyMarkup = null;
    
    switch (data) {
      case 'main_menu':
        responseText = `üé≠ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á"!*

–ú—ã –æ–±—ä–µ–¥–∏–Ω—è–µ–º –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ:
‚ú® –†–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–π —é–º–æ—Ä
‚ú® –°—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ  
‚ú® –ù–∞—Ö–æ–¥–∏—Ç—å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤

üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 10 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π*

üëá *–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ* üëá`;
        replyMarkup = createMainMenu();
        break;
        
      case 'about_channel':
        responseText = `üìã *–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ*

*–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á* - —ç—Ç–æ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∫–ª—É–± –ø–æ —é–º–æ—Ä—É. –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞—É—á–∏—Ç—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–æ —à—É—Ç–∏—Ç—å –∏ –ª–µ–≥–∫–æ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –Ω–µ–ª–æ–≤–∫–∏–º–∏ —Å–∏—Ç—É–∞—Ü–∏—è–º–∏ - —Ç—ã –ø–æ –∞–¥—Ä–µ—Å—É.

üéØ *–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —á–µ—Ä–µ–∑ –ø–∞—Ä—É –Ω–µ–¥–µ–ª—å —Ç—ã:*
‚Ä¢ –õ–µ–≥–∫–æ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å –ª—é–±—ã–µ –Ω–µ–ª–æ–≤–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –≤ —à—É—Ç–∫—É
‚Ä¢ –ë–æ–ª—å—à–µ –Ω–µ –¥—É–º–∞–µ—à—å: ¬´–ê —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ–±—ã –±—ã–ª–æ —Å–º–µ—à–Ω–æ?¬ª
‚Ä¢ –ù–∞—á–∞–ª –¥—É–º–∞—Ç—å –ø–æ-–Ω–æ–≤–æ–º—É!

üìö *–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏:*
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —É—Ä–æ–∫–∏ –ø–æ —é–º–æ—Ä—É, –ø–æ–¥–∞—á–µ, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ
‚Ä¢ –ü—Ä—è–º—ã–µ —ç—Ñ–∏—Ä—ã —Å–æ –°—Ç–∞—Å–æ–º –ï—Ä–Ω–∏–∫–æ–º
‚Ä¢ –° –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –¥–æ—Å—Ç—É–ø –∫ —Ç—Ä–µ–Ω–∞–∂—ë—Ä–∞–º –ø–æ —é–º–æ—Ä—É, –ø–æ–¥–±–æ—Ä–∫–∞–º –ø–∞–Ω—á–µ–π –∏ –≤–µ–±–∏–Ω–∞—Ä–∞–º

üë• –ò –≤—Å—ë —ç—Ç–æ —Å—Ä–µ–¥–∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞ –æ–¥–Ω–æ–π –≤–æ–ª–Ω–µ: —Å–º–µ—é—Ç—Å—è –Ω–∞–¥ —Ç–≤–æ–∏–º–∏ —à—É—Ç–∫–∞–º–∏ –∏ –ø–æ–º–æ–≥–∞—é—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ. –ó–¥–µ—Å—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ —É—á–∏—Ç—å—Å—è, –ø—Ä–æ–±–æ–≤–∞—Ç—å, –æ—à–∏–±–∞—Ç—å—Å—è –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —Å–º–µ—à–Ω–µ–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.

üèÜ *–ê —Ç–∞–∫–∂–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ–Ω–∫—É—Ä—Å —à—É—Ç–æ–∫!* –õ—É—á—à–∞—è –∑–∞–±–∏—Ä–∞–µ—Ç 1000 —Ä—É–±–ª–µ–π. –ü—Ä–æ—Å—Ç–æ –∑–∞ —Ö–æ—Ä–æ—à–∏–π –ø–∞–Ω—á. –í –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞ —Å—É–ø–µ—Ä –ø—Ä–∏–∑. –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç 100 000 —Ä—É–±–ª–µ–π!

üí∞ *–í—Å—ë —ç—Ç–æ - –≤—Å–µ–≥–æ –∑–∞ 10 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü.*

üöÄ *–ü–æ–ø–∞–¥–∞—è –≤ –ü–µ—Ä–≤—ã–π –ü–∞–Ω—á —Ç—ã:*
‚Ä¢ –ù–∞—á–∏–Ω–∞–µ—à—å –ø–æ–Ω–∏–º–∞—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É —é–º–æ—Ä–∞
‚Ä¢ –°—Ç–∞–Ω–æ–≤–∏—à—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ
‚Ä¢ –¢–µ–±—è –±–æ–ª—å—à–µ —Å–ª—É—à–∞—é—Ç
‚Ä¢ –õ–µ–≥—á–µ –∑–∞–≤–æ–¥–∏—à—å –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞

–≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –∏ –≤ —Ä–∞–±–æ—Ç–µ, –∏ –≤ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ, –∏ –ø—Ä–æ—Å—Ç–æ –≤ –∂–∏–∑–Ω–∏.

üëá *–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø –Ω–∏–∂–µ*`;
        replyMarkup = {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscribe' }],
              [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]
            ]
          }
        };
        break;
        
      case 'my_status':
        const isActive = await isSubscriptionActive(user.id);
        const autoPaymentStatus = getAutoPaymentStatus(user.id);
        
        responseText = `üí∞ *–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏*

üìä –°—Ç–∞—Ç—É—Å: ${isActive ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
üîÑ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏: ${autoPaymentStatus.active ? '‚úÖ –í–∫–ª—é—á–µ–Ω—ã' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}

${isActive ? 
  'üéâ –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É!' : 
  'üí° –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É.'
}

${autoPaymentStatus.active ? 
  `üí≥ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã\nüìÖ –°–ª–µ–¥—É—é—â–µ–µ —Å–ø–∏—Å–∞–Ω–∏–µ: –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (—Ç–µ—Å—Ç)\nüí∞ –°—É–º–º–∞: ${autoPaymentStatus.amount || 10}‚ÇΩ` : 
  'üîÑ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.'
}`;
        
        replyMarkup = {
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscribe' },
                { text: 'üîÑ –ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞', callback_data: 'auto_subscribe' }
              ],
              [{ text: '‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞–º–∏', callback_data: 'manage_auto_payments' }],
              [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]
            ]
          }
        };
        break;
        
      case 'subscribe':
        responseText = `üí≥ *–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏*

–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:

üí≥ *–ÆKassa* - –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏
‚Çø *CryptoCloud* - –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã (Bitcoin, Ethereum, USDT –∏ –¥—Ä.)

üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 10‚ÇΩ –Ω–∞ 30 –¥–Ω–µ–π`;
        replyMarkup = createPaymentSystemMenu(false);
        break;
        
      case 'auto_subscribe':
        responseText = `üîÑ *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏*

–ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü.

‚ö° *–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*
‚Ä¢ –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±—É–¥–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
‚Ä¢ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã

üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 10‚ÇΩ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
üîí –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç

–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏:`;
        replyMarkup = createPaymentSystemMenu(true);
        break;
        
      case 'manage_auto_payments':
        const activeAutoPayment = getActiveAutoPaymentMethod(user.id);
        const hasActiveAutoPayment = getAutoPaymentStatus(user.id).active;
        
        responseText = `‚öôÔ∏è *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞–º–∏*

${hasActiveAutoPayment ? 
  `‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –∞–∫—Ç–∏–≤–Ω—ã
üí≥ –°—É–º–º–∞: 10‚ÇΩ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
üîÑ –°—Ç–∞—Ç—É—Å: –†–∞–±–æ—Ç–∞—é—Ç

–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.` :
  `‚ùå –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã

–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.`
}`;
        
        replyMarkup = createAutoPaymentManagementMenu(hasActiveAutoPayment);
        break;
        
      case 'disable_auto_payments':
        try {
          const success = await stopAutoPayments(user.id, true);
          await disableAutoPayments(user.id);
          
          responseText = success ? 
            `‚úÖ *–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã*

–í–∞—à–∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã. –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã.

üí° –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.` :
            `‚ö†Ô∏è *–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã*

–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π.`;
            
          replyMarkup = {
            reply_markup: {
              inline_keyboard: [
                [{ text: 'üîÑ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–Ω–æ–≤–æ', callback_data: 'auto_subscribe' }],
                [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]
              ]
            }
          };
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π:', error);
          responseText = `‚ùå *–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π*

–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.`;
          replyMarkup = createAutoPaymentManagementMenu(true);
        }
        break;
        
      case 'auto_payment_status':
        const status = getAutoPaymentStatus(user.id);
        
        responseText = `üìä *–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π*

${status.active ? 
  `‚úÖ –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –∞–∫—Ç–∏–≤–Ω—ã
üí∞ –°—É–º–º–∞: ${status.amount || 10}‚ÇΩ
‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (—Ç–µ—Å—Ç)
üìÖ –ó–∞–ø—É—â–µ–Ω—ã: ${status.startedAt ? new Date(status.startedAt).toLocaleString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
üîÑ –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂: ${status.lastPayment ? new Date(status.lastPayment).toLocaleString('ru-RU') : '–ï—â–µ –Ω–µ –±—ã–ª–æ'}` :
  `‚ùå –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã

–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.`
}`;
        
        replyMarkup = createAutoPaymentManagementMenu(status.active);
        break;
        
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –æ–±—ã—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
      case 'pay_yukassa':
      case 'pay_cryptocloud':
        const paymentSystem = data.replace('pay_', '');
        try {
          const payment = await createSubscriptionPayment(user.id, user, paymentSystem, false);
          
          responseText = `üí≥ *–ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω*

üí∞ –°—É–º–º–∞: ${payment.amount}‚ÇΩ
üè¶ –°–∏—Å—Ç–µ–º–∞: ${paymentSystem === 'yukassa' ? '–ÆKassa' : 'CryptoCloud'}
üÜî ID –ø–ª–∞—Ç–µ–∂–∞: \`${payment.paymentId}\`

üëá *–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã* üëá`;
          
          replyMarkup = {
            reply_markup: {
              inline_keyboard: [
                [{ text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', url: payment.confirmationUrl }],
                [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'subscribe' }]
              ]
            }
          };
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
          responseText = `‚ùå *–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞*

${error.message}

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.`;
          replyMarkup = createPaymentSystemMenu(false);
        }
        break;
        
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏
      case 'auto_pay_yukassa':
        try {
          const autoPayment = await createSubscriptionPayment(user.id, user, 'yukassa', true);
          
          responseText = `üîÑ *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏*

üí∞ –°—É–º–º–∞: ${autoPayment.amount}‚ÇΩ
üè¶ –°–∏—Å—Ç–µ–º–∞: –ÆKassa
üÜî ID –ø–ª–∞—Ç–µ–∂–∞: \`${autoPayment.paymentId}\`

‚ö†Ô∏è *–í–∞–∂–Ω–æ:* –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–∞—à–∞ –∫–∞—Ä—Ç–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (—Ç–µ—Å—Ç).

üëá *–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏* üëá`;
          
          replyMarkup = {
            reply_markup: {
              inline_keyboard: [
                [{ text: 'üîÑ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫—É', url: autoPayment.confirmationUrl }],
                [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'auto_subscribe' }]
              ]
            }
          };
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞:', error);
          responseText = `‚ùå *–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∏*

${error.message}

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`;
          replyMarkup = createPaymentSystemMenu(true);
        }
        break;
        
      default:
        responseText = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞';
        replyMarkup = createMainMenu();
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await bot.editMessageText(responseText, {
      chat_id: chatId,
      message_id: messageId,
      parse_mode: 'Markdown',
      ...replyMarkup
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await addMessage(user.id, responseText, true, 'text');
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback
    await bot.answerCallbackQuery(callbackQuery.id);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback:', error);
    await bot.answerCallbackQuery(callbackQuery.id, {
      text: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      show_alert: true
    });
  }
}