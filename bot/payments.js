import { addPayment } from './lib/supabase.js';
import { createYukassaPayment, createSimpleYukassaPayment, createAutoPayment } from './yukassa.js';
import { createCryptoCloudInvoice, createSimpleCryptoCloudPayment } from './cryptocloud.js';

// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Å—É–º–º—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
const MIN_AMOUNTS = {
  yukassa: 10,    // 10 —Ä—É–±–ª–µ–π –¥–ª—è –ÆKassa
  yukassa_auto: 10, // 10 —Ä—É–±–ª–µ–π –¥–ª—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –ÆKassa
  cryptocloud: 50 // 50 —Ä—É–±–ª–µ–π –¥–ª—è CryptoCloud (–º–∏–Ω–∏–º—É–º –¥–ª—è –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π)
};

export async function createSubscriptionPayment(userId, user, paymentSystem = 'yukassa') {
  try {
    console.log(`üí≥ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —á–µ—Ä–µ–∑ ${paymentSystem}`);
    
    if (!userId) {
      throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
    
    if (!user) {
      throw new Error('–ù–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—É–º–º—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    const amount = MIN_AMOUNTS[paymentSystem] || MIN_AMOUNTS.yukassa;
    const description = paymentSystem === 'yukassa_auto' 
      ? `–ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á" (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –¥–ª—è —Ç–µ—Å—Ç–∞)`
      : `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª "–ü–µ—Ä–≤—ã–π –ü–∞–Ω—á" –Ω–∞ 30 –¥–Ω–µ–π`;
    
    const metadata = {
      userId: userId.toString(),
      username: user.username || '',
      first_name: user.first_name || '',
      last_name: user.last_name || '',
      email: `user${userId}@firstpunch.ru`, // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º email –¥–ª—è —á–µ–∫–∞
      type: paymentSystem === 'yukassa_auto' ? 'auto_subscription' : 'subscription',
      paymentSystem: paymentSystem
    };
    
    console.log('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É...');
    console.log('üìã –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:', metadata);
    console.log('üí∞ –°—É–º–º–∞:', amount, '—Ä—É–±–ª–µ–π');
    
    let payment;
    
    if (paymentSystem === 'yukassa_auto') {
      // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
      payment = await createAutoPayment(amount, description, 'https://t.me/firstpunch_bot', metadata);
    } else if (paymentSystem === 'cryptocloud') {
      // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ CryptoCloud
      payment = await createSimpleCryptoCloudPayment(amount, description, 'https://t.me/firstpunch_bot', metadata);
    } else {
      // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
      payment = await createSimpleYukassaPayment(amount, description, 'https://t.me/firstpunch_bot', metadata);
    }
    
    console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω:', payment);
    
    if (!payment.confirmationUrl) {
      console.error('‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã');
      throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã');
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞—Ç–µ–∂ –≤ Supabase —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    const supabasePayment = await addPayment(
      userId, 
      payment.paymentId, 
      payment.amount, 
      payment.status,
      payment.confirmationUrl,
      paymentSystem
    );
    
    console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Supabase:', supabasePayment);
    
    return {
      paymentId: payment.paymentId,
      confirmationUrl: payment.confirmationUrl,
      amount: payment.amount,
      status: payment.status,
      paymentSystem: paymentSystem,
      minAmount: MIN_AMOUNTS[paymentSystem],
      paymentMethodId: payment.paymentMethodId || null
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–¥–ø–∏—Å–∫–∏:', error.message);
    console.error('‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂: ${error.message}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å –∏—Ö –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
export function getAvailablePaymentSystems() {
  return [
    {
      id: 'yukassa',
      name: '–ÆKassa (—Ä–∞–∑–æ–≤—ã–π)',
      description: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ - —Ä–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂',
      minAmount: MIN_AMOUNTS.yukassa,
      currency: '‚ÇΩ',
      icon: 'üí≥',
      recommended: false
    },
    {
      id: 'yukassa_auto',
      name: '–ÆKassa (–∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂)',
      description: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (—Ç–µ—Å—Ç)',
      minAmount: MIN_AMOUNTS.yukassa_auto,
      currency: '‚ÇΩ',
      icon: 'üîÑ',
      recommended: true
    },
    {
      id: 'cryptocloud',
      name: 'CryptoCloud',
      description: 'Bitcoin, Ethereum, USDT –∏ –¥—Ä—É–≥–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã',
      minAmount: MIN_AMOUNTS.cryptocloud,
      currency: '‚ÇΩ',
      icon: '‚Çø',
      recommended: false
    }
  ];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã
export function validatePaymentAmount(amount, paymentSystem) {
  const minAmount = MIN_AMOUNTS[paymentSystem] || MIN_AMOUNTS.yukassa;
  return amount >= minAmount;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É–º–º—ã
export function getRecommendedPaymentSystem(amount) {
  if (amount >= MIN_AMOUNTS.yukassa_auto) {
    return 'yukassa_auto'; // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂
  } else if (amount >= MIN_AMOUNTS.yukassa && amount < MIN_AMOUNTS.cryptocloud) {
    return 'yukassa';
  } else if (amount >= MIN_AMOUNTS.cryptocloud) {
    return 'yukassa_auto'; // –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –æ—Å—Ç–∞–µ—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º
  } else {
    return 'yukassa'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ÆKassa
  }
}